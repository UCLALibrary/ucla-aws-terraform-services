---
version: 0.2

env:
  variables:
    K8S_DEPLOYMENT_APP: "cantaloupe"
    K8S_NAMESPACE: "test-iiif"
    K8S_DEPLOYMENT_CONTAINER_IMAGE_TAG: "latest"
    K8S_TEST_CLUSTER: "test-iiif-cluster"
    K8S_PROD_CLUSTER: "prod-iiif-cluster"
  parameter-store:
    K8S_DEPLOYMENT_ROBOT_ARN: "iiif.k8s.robot.role.arn"
phases:
  install:
    commands:
      - apk -q add --update curl py-pip jq
      - pip -q install awscli
  build:
    commands:
      - curl -s -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - export PATH=$PWD/:$PATH
      - aws --version
      - |
          if [ "${K8S_NAMESPACE}" = "prod-iiif" ] ; then
            IIIF_CLUSTER="${K8S_PROD_CLUSTER}"
          else
            IIIF_CLUSTER="${K8S_TEST_CLUSTER}"
          fi
          aws eks update-kubeconfig --name "${IIIF_CLUSTER}" --region us-west-2 --role-arn "${K8S_DEPLOYMENT_ROBOT_ARN}"
      - terraform version
      - |
          TF_ENV_SUBPATH=$(echo "${K8S_NAMESPACE}" | cut -d '-' -f1)
          cd environments/$TF_ENV_SUBPATH/k8s && terraform init
          terraform apply --auto-approve -var-file=$TF_ENV_SUBPATH.tfvars -var "${K8S_DEPLOYMENT_APP}_deployment_container_image_version=${K8S_DEPLOYMENT_CONTAINER_IMAGE_TAG}" -target="kubernetes_deployment.${K8S_DEPLOYMENT_APP}"
          if [ "${K8S_DEPLOYMENT_CONTAINER_IMAGE_TAG}" = "latest" ] ; then
            kubectl -n $K8S_NAMESPACE rollout restart deployment/$K8S_DEPLOYMENT_APP
          fi
